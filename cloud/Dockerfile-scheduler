# syntax=docker/dockerfile:1.6
FROM python:3.11-slim

# Environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app/api:$PYTHONPATH"

# System deps (curl for healthcheck, git for vcs installs if ever needed)
RUN apt-get update && apt-get install -y --no-install-recommends \
      curl git \
    && rm -rf /var/lib/apt/lists/*

# Install uv (fast Python package manager)
ENV UV_INSTALL_DIR=/root/.local/bin
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    ln -s /root/.local/bin/uv /usr/local/bin/uv

WORKDIR /app

# Leverage layer caching: copy only dependency manifests first
COPY pyproject.toml ./
COPY uv.lock ./
COPY api /app/api

# Create project venv and install dependencies (lockfile is mandatory)
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --no-dev --frozen

# Ensure venv binaries are first on PATH
ENV PATH="/app/.venv/bin:$PATH"

# Default CMD - can be overridden by docker-compose. Logs go to stdout.
CMD ["sh", "-c", "while true; do cd /app && python api/bench_headless.py --providers all --fresh-minutes ${FRESH_MINUTES:-30}; sleep ${SLEEP_SECONDS:-1800}; done"]

ARG CUDA_IMAGE="12.1.1-devel-ubuntu22.04"

FROM nvidia/cuda:${CUDA_IMAGE} AS llama_build

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y git build-essential \
    python3 python3-pip gcc wget \
    ocl-icd-opencl-dev opencl-headers clinfo \
    libclblast-dev libopenblas-dev \
    && mkdir -p /etc/OpenCL/vendors && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

RUN git clone https://github.com/abetlen/llama-cpp-python.git /llama-cpp-python
WORKDIR /llama-cpp-python

# setting build related env vars
ENV CUDA_DOCKER_ARCH=all
ENV LLAMA_CUBLAS=1

# Install api stuff
RUN pip3 install fastapi uvicorn tiktoken \
    boto3 pymongo pynvml flask pytz openai fastapi uvicorn httpx typer \
    python-dotenv redis

# Install GGUF stuff


# Install llama-cpp-python (build with cuda)
RUN CMAKE_ARGS="-DLLAMA_CUBLAS=on" pip install llama-cpp-python


# Create log directory and file
RUN mkdir -p /var/log_gguf
RUN touch /var/log_gguf/gguf.log

# Run Flask
WORKDIR /app
ENTRYPOINT [ "python3", "-m", "llm_bench_gguf.server" ]
